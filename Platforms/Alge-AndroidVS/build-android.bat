cls
@echo off
echo JAVA_HOME=%JAVA_HOME%
echo NDK_ROOT=%NDK_ROOT%
echo SDK_ROOT=%SDK_ROOT%
echo ANT_HOME=%ANT_HOME%
set ANT_EXE=%ANT_HOME%\bin\ant
set KEYSTORE_FILE=C:\algeandroidapps.keystore
set KEYSTORE_USERNAME=bilal
echo KEYSTORE_FILE=%KEYSTORE_FILE% with alias-name=%KEYSTORE_USERNAME%   [generated by keytool command of javasdk]

set PACKAGEQ=%1
set PACKAGE=%PACKAGEQ:"=%
echo PACKAGE=%PACKAGE%
set APPNAMEQ=%2
set APPNAME=%APPNAMEQ:"=%
echo APPNAME=%APPNAME%
set VERSION=%3
echo VERSION=%VERSION%
set SDKVER=%4
echo SDKVER=%SDKVER%
set ORIENT=%5
echo ORIENT=%ORIENT%
set PASSW=%6

type jni\CANDIDATE.h
echo Checking .. src\%PACKAGE:.=\%\%APPNAME%.java

set GLUEDIR=src\%PACKAGE:.=\%\
echo Making ... %GLUEDIR%  
mkdir %GLUEDIR%
set PWD=%cd%
cd %GLUEDIR%

set GLUECODE=package %PACKAGE%; public class %APPNAME% extends com.acnodelabs.alge.BaseActivity{}
echo Writing .. Gluecode in %APPNAME%.java
echo %GLUECODE% > %APPNAME%.java
echo cd %PWD%
cd %PWD%

echo src\%PACKAGE:.=\%\%APPNAME%.java
type src\%PACKAGE:.=\%\%APPNAME%.java
echo ...
set /p var=Pl Check above info/variables are set Properly, Continue as per above?[y/n]: 
if not %var%==y exit /B

echo ------------------ SLATE CLEAN --- Ignore if Exception is raised on %PACKAGEQ%

del /Q assets\*.jpg
del /Q assets\*.png
del /Q assets\*.alx
del /Q assets\*.tga
del /Q assets\*.wav
del /Q assets\*.mp3

echo ------------------ COPYING APP ASSETS
cd assets
copy /Y ..\..\..\Apps\%APPNAME%.Assets\Data\* .
copy icon.png ..\res\drawable-ldpi
cd ..

echo ------------------ CONFIGURING NATIVE BUILD
set USERSRC=%PACKAGE:.=\%
cd src
mkdir %USERSRC%
cd ..
echo CHECK %USERSRC%
copy jni\CANDIDATE.h jni\CAND.h
del jni\CANDIDATE.h

del AndroidManifest.xml
cfgdroid.exe %PACKAGE% %APPNAME% %VERSION% %SDKVER% %ORIENT% > AndroidManifest.xml
copy jni\CAND.h jni\CANDIDATE.h
del jni\CAND.h

echo ------------------ COMPILING NATIVE CODES
call %NDK_ROOT%\ndk-build clean
call %NDK_ROOT%\ndk-build
echo ------------------- BUILDING JAVA PORTION
echo ---- compiling java files in src folder
cd src/com/acnodelabs/alge
echo javac -classpath %SDK_ROOT%\platforms\android-27\android.jar *.java
call javac -classpath %SDK_ROOT%\platforms\android-27\android.jar *.java
cd ../../../..
echo --- generating new ant build.xml
del build.xml
call %SDK_ROOT%\tools\android update project --target android-27 --path .
echo --- generating apk 
call %ANT_EXE% -q release
del /Q bin\%APPNAME%.apk
echo ------------------- SIGNING
echo jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore %KEYSTORE_FILE% bin\%APPNAME%-release-unsigned.apk %KEYSTORE_USERNAME% -keypass %PASSW%
call jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore %KEYSTORE_FILE% bin\%APPNAME%-release-unsigned.apk %KEYSTORE_USERNAME% -storepass %PASSW% -keypass %PASSW%
echo %SDK_ROOT%\build-tools\28.0.3\zipalign -v 4 bin\%APPNAME%-release-unsigned.apk bin\%APPNAME%.apk
call %SDK_ROOT%\build-tools\28.0.3\zipalign -v 4 bin\%APPNAME%-release-unsigned.apk bin\%APPNAME%.apk
%SDK_ROOT%\platform-tools\adb uninstall %PACKAGE%
echo Deploying...
%SDK_ROOT%\platform-tools\adb install bin\%APPNAME%.apk
%SDK_ROOT%\platform-tools\adb shell am start -n %PACKAGE%/.%APPNAME%
echo Check App on your Device
