#!/bin/bash
clear
export PS1="\h::\W$ "
NDK_ROOT=/Users/bilal/Downloads/android-ndk-r18b
SDK_ROOT=/Users/bilal/Library/Android/sdk
export ANDROID_NDK_ROOT=$NDK_ROOT
export ANDROID_SDK_ROOT=$SDK_ROOT
export PATH=$PATH:/$SDK_ROOT/tools

export NDK=$NDK_ROOT  
export PATH=$NDK:$PATH

PACKAGE=$1
APPNAME=$2
VERSION=$3

$SDK_ROOT/platform-tools/adb uninstall $PACKAGE

echo -786-------------- COPYING APP ASSETS
cd assets
rm -vf *
rm -vf bin/$2*.apk
cp -v ../../../Apps/$2.Assets/Data/* .
cp icon.png ../res/drawable-ldpi
cd ..
echo ------------------ CONFIGURING NATIVE BUILD
USERSRC=${PACKAGE//'.'/'/'}
cd src
mkdir -p $USERSRC
cd ..
echo CHECK $USERSRC
mv -f jni/CANDIDATE.h jni/CAND.h
./configdroid $PACKAGE $APPNAME $VERSION
mv -f jni/CAND.h jni/CANDIDATE.h
echo "..."
echo change minsdkversion from 4 to 16 manually till new configdroid is available
read -p ""
vi AndroidManifest.xml
echo ------------------ COMPILING NATIVE CODES
$NDK_ROOT/ndk-build clean
$NDK_ROOT/ndk-build
echo ------------------- BUILDING JAVA PORTION
echo ----removing junk .DS_Store files
rm -f res/.DS_Store
rm -f assets/.DS_Store
rm -f res/drawable-ldpi/.DS_Store
echo ---- compiling java files in src folder
cd src/com/acnodelabs/alge
javac -classpath /Users/bilal/Library/Android/sdk/platforms/android-14/android.jar *.java
cd ../../../..
echo --- generating new ant build.xml
rm build.xml
android update project --target android-14 --path .
echo --- generating apk 
ant -q release
echo ------------------- SIGNING
rm -f bin/$2.apk
jarsigner -verbose -keystore ~/algeandroidapps.keystore bin/$2-release-unsigned.apk alge
$SDK_ROOT/build-tools/28.0.0/zipalign -v 4 bin/$2-release-unsigned.apk bin/$2.apk
echo Good Luck !!
rm -rf $USERSRC/$2.java
echo install check 

$SDK_ROOT/platform-tools/adb install bin/$2.apk
echo Check App on your Device
